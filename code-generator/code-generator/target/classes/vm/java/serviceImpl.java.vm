package ${packageName}.serviceimpl;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import cn.com.bbmg.bidmall.mybatis.util.PageUtil;
import com.baomidou.mybatisplus.core.metadata.IPage;
import ${packageName}.mapper.${ClassName}Mapper;
import ${packageName}.entity.dos.${ClassName};
import ${packageName}.entity.dto.${ClassName}SearchParams;
import ${packageName}.service.${ClassName}Service;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

import java.util.List;
import java.util.Map;

/**
 * ${functionName}Service业务层处理
 *
 * @author ${author}
 * @date ${datetime}
 */
@Service
@Transactional(rollbackFor = Exception.class)
@RequiredArgsConstructor(onConstructor = @__(@Autowired))
public class ${ClassName}ServiceImpl extends ServiceImpl<${ClassName}Mapper, ${ClassName}> implements ${ClassName}Service {

    private final ${ClassName}Mapper paramMapper;

    @Override
    public IPage<${ClassName}> get${ClassName}ByPage(${ClassName}SearchParams param) {
        LambdaQueryWrapper<${ClassName}> queryWrapper = Wrappers.lambdaQuery();
#foreach($column in $columns)
    #set($queryType=$column.queryType)
    #set($javaField=$column.javaField)
    #set($javaType=$column.javaType)
    #set($columnName=$column.columnName)
    #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
    #if($column.query)
        #if($column.queryType == "EQ")
            #if($javaType == 'String')
        if (StringUtils.isNotBlank(param.get$AttrName())){
            queryWrapper.eq(${ClassName}::get$AttrName ,param.get$AttrName());
        }
            #else
        if (param.get$AttrName() != null){
            queryWrapper.eq(${ClassName}::get$AttrName ,param.get$AttrName());
        }
            #end
        #elseif($queryType == "NE")
            #if($javaType == 'String')
        if (StringUtils.isNotBlank(param.get$AttrName())){
            queryWrapper.ne(${ClassName}::get$AttrName ,param.get$AttrName());
        }
            #else
        if (param.get$AttrName() != null){
            queryWrapper.ne(${ClassName}::get$AttrName ,param.get$AttrName());
        }
            #end
        #elseif($queryType == "GT")
            #if($javaType == 'String')
        if (StringUtils.isNotBlank(param.get$AttrName())){
            queryWrapper.gt(${ClassName}::get$AttrName ,param.get$AttrName());
        }
            #else
        if (param.get$AttrName() != null){
            queryWrapper.gt(${ClassName}::get$AttrName ,param.get$AttrName());
        }
            #end
        #elseif($queryType == "GTE")
            #if($javaType == 'String')
        if (StringUtils.isNotBlank(param.get$AttrName())){
            queryWrapper.ge(${ClassName}::get$AttrName ,param.get$AttrName());
        }
            #else
        if (param.get$AttrName() != null){
            queryWrapper.ge(${ClassName}::get$AttrName ,param.get$AttrName());
        }
            #end
        #elseif($queryType == "LT")
            #if($javaType == 'String')
        if (StringUtils.isNotBlank(param.get$AttrName())){
            queryWrapper.lt(${ClassName}::get$AttrName ,param.get$AttrName());
        }
            #else
        if (param.get$AttrName() != null){
            queryWrapper.lt(${ClassName}::get$AttrName ,param.get$AttrName());
        }
            #end
        #elseif($queryType == "LTE")
            #if($javaType == 'String')
        if (StringUtils.isNotBlank(param.get$AttrName())){
            queryWrapper.le(${ClassName}::get$AttrName ,param.get$AttrName());
        }
            #else
        if (param.get$AttrName() != null){
            queryWrapper.le(${ClassName}::get$AttrName ,param.get$AttrName());
        }
            #end
        #elseif($queryType == "LIKE")
            #if($javaType == 'String')
        if (StringUtils.isNotBlank(param.get$AttrName())){
            queryWrapper.like(${ClassName}::get$AttrName ,param.get$AttrName());
        }
            #else
        if (param.get$AttrName() != null){
            queryWrapper.like(${ClassName}::get$AttrName ,param.get$AttrName());
        }
            #end
        #elseif($queryType == "BETWEEN")
        Map<String, Object> params = param.getParams();
        if (params.get("begin$AttrName") != null && params.get("end$AttrName") != null) {
            queryWrapper.between(${ClassName}::get$AttrName ,params.get("begin$AttrName"),params.get("end$AttrName"));
        }
        #end
    #end
#end
        return this.page(PageUtil.initPage(param), queryWrapper);
    }
    
}
